# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'docs/**'
      - 'model-index.yml'
      - 'configs/**.md'

  pull_request:
    paths-ignore:
      - 'README.md'
      - 'README_zh-CN.md'
      - 'docs/**'
      - 'model-index.yml'
      - 'configs/**.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UBUNTU_VERSION: ubuntu1804
    strategy:
      matrix:
        python-version: [3.7]
        torch: [1.5.0, 1.6.0, 1.7.0, 1.8.0, 1.9.0]
        include:
          - torch: 1.5.0
            torch_version: 1.5
            torchvision: 0.6.0
          - torch: 1.6.0
            torch_version: 1.6
            torchvision: 0.7.0
          - torch: 1.7.0
            torch_version: 1.7
            torchvision: 0.8.1
          - torch: 1.7.0
            torch_version: 1.7
            torchvision: 0.8.1
            python-version: 3.8
          - torch: 1.8.0
            torch_version: 1.8
            torchvision: 0.9.0
          - torch: 1.8.0
            torch_version: 1.8
            torchvision: 0.9.0
            python-version: 3.8
          - torch: 1.9.0
            torch_version: 1.9
            torchvision: 0.10.0
          - torch: 1.9.0
            torch_version: 1.9
            torchvision: 0.10.0
            python-version: 3.8

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pillow
        run: pip install Pillow==6.2.2
        if: ${{matrix.torchvision < 0.5}}
      - name: Install PyTorch
        run: pip install --use-deprecated=legacy-resolver torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu  -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMCV
        run: |
          pip install --use-deprecated=legacy-resolver mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch${{matrix.torch_version}}/index.html
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install mmselfsup dependencies
        run: |
          pip install -r requirements.txt
      - name: Build and install
        run: |
          rm -rf .eggs
          pip install -e . -U
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmselfsup -m pytest tests/
          coverage xml
          coverage report -m --omit="mmselfsup/apis/*"
      # Only upload coverage report for python3.8 && pytorch1.9.0
      - name: Upload coverage to Codecov
        if: ${{matrix.torch == '1.9.0' && matrix.python-version == '3.8'}}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  test_windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        python: [3.8]
        platform: [cpu, cu111]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Upgrade pip
        run: pip install pip --upgrade --user
      - name: Install PyTorch
        # As a complement to Linux CI, we test on PyTorch LTS version
        run: pip install torch==1.8.2+${{ matrix.platform }} torchvision==0.9.2+${{ matrix.platform }} -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html
      - name: Install OpenCV
        run: |
          pip install opencv-python>=3
      - name: Install MMCV
        run: |
          pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cpu/torch1.8/index.html --only-binary mmcv-full
      - name: Install unittest dependencies
        run: |
          pip install -r requirements.txt
      - name: Build and install
        run: pip install -e .
      - name: Run unittests
        run: |
          coverage run --branch --source mmselfsup -m pytest tests/
      - name: Generate coverage report
        run: |
          coverage xml
          coverage report -m --omit="mmselfsup/apis/*"
